FROM 8.5.41-jdk8
MAINTAINER "OWNER"="VEKI"
RUN sudo apt-get install maven -y
COPY source dest 
VOLUME ['/home/jenkins']
EXPOSE 8080
ENTRYPOINT ['catelina.sh', sh]



COPY source /usr/lib/tomcat/webapss/mywar.war

		or
ADD source(url) dest


commands:
1. docker build -t mytomcat path (path: dockerfile path)
2. docker run -it mytomcat tomcat8 /bin/bash

if you want to go inside container:
3. docker exec -it container-name






docker build
docker run
docker exec
docker tag

Dcoker File:

FROM
MAINTAINER
RUN
VOLUME
EXPOSE
CMD and ENTRYPOINT

================================================================================== 

INSTALLATION


sudo curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
 >>>> add user to docker group

sudo usermod -ag docker jenkins


already existed images:

1. sudo docker pull tomcat
2. docker images

 TAG>>>>>  docker run -it tomcat:tag /bin/bash <<<<<
3. sudo docker run -it tomcat:latest /bin/bash
	sudo docker run -d tomcat:8.0-jdk8 

4. docker ps -a <<<<docker running container stauts>>>>

SYN <<docker rmi -f IMAGENAME >>>
5. docker rmi -f tomcat:latest

<container removeing<>>
sudo docker rm $(docker ps -a -q) or 

SYN docker rm -f <container ID>
sudo docker ps -a

docker rm -f 63d87b494



<<port mapping  >>
 sudo docker run -d -p 8081:8080 --name tomcat2 tomcat:8.5-jdk8
	
	sudo docker run -d -p 8081:8080 --name Hyd tomcat:8.5-jdk8
	sudo docker run -d -p 8082:8080 --name Mumbai tomcat:8.5-jdk8
	sudo docker run -d -p 8083:8080 --name Pune tomcat:8.5-jdk8




=======================================================================
FROM tomcat:8.5.41-jdk8    
MAINTAINER "OWNER"="VEKI"
RUN sudo apt-get install maven -y
COPY source dest 
VOLUME ['/home/jenkins']
EXPOSE 8080
ENTRYPOINT ['catelina.sh', sh]


FROM tomcat:tag

MAINTAINER "owner"="dell"
MAINTAINER "auther"="viki"

LABEL = meta data like owner info, flie info, app info, version


RUN "sudo apt-get install git -y"  : for install with extra s/with

COPY "source" "dest" : copy from the local

ADD "source" "dest" : from external link (url)

EXPOSE 8080    : expose the port to external world

ENTRYPOINT / CMD:

	ENTRYPOINT ['catalina.sh', sh]
	CMD ['catalina.sh', sh]
	
VOLUME /home/ubuntu/logs     : we use for backup perpose
===================
FROM 9.0.20-jdk11
MAINTAINER "OWNER"="VICKEY"
RUN sudo apt-get install git -y
EXPOSE 8080
CMD ["catalina.sh", "run"]


FROM nginx:1.17.0
MAINTAINER "OWNER"="VICKEY"
EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]















